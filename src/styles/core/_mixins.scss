@mixin line {
  display: inline-block;
  width: $button-size;
  height: $button-size/10;
  background: $color;
  border-radius: 1px;
  transition: $transition;
}

@mixin border-radius($radius){
  -webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	-ms-border-radius: $radius;
	border-radius: $radius;
}

@mixin transform($transforms) {
	-webkit-transform: $transforms;
	-moz-transform: $transforms;
	-ms-transform: $transforms;
	transform: $transforms;
}


@mixin gap--vertical($gap){

  $gap : calc($gap / 2);

  > *{

    margin-top: $gap;
    margin-bottom: $gap;

    @include display(phone) {
      margin-top: calc($gap / 2);
      margin-bottom: calc($gap / 2);
    }

    &:first-child{
      margin-top: 0;
    }

    &:last-child{
      margin-bottom: 0;
    }

  }

}

@mixin gap--horizontal($gap){

  $gap : calc($gap / 2);

  > *{

    margin-left: $gap;
    margin-right: $gap;

    @include display(phone) {
      margin-left: calc($gap / 2);
      margin-right: calc($gap / 2);
    }

    &:first-child{
      margin-left: 0;
    }

    &:last-child{
      margin-right: 0;
    }

  }

}

@mixin gap($gap){

  $gap : calc($gap / 2);

  > *{

    margin-left: $gap;
    margin-right: $gap;

    @include display(phone) {
      margin-left: 0;
      margin-right: 0;
      margin-bottom: $gap;
    }

    &:first-child{
      margin-left: 0;
    }

    &:last-child{
      margin-right: 0;

      @include display(phone) {
        margin-bottom: 0;
      }
    }

  }

}

@mixin grid($gap, $direction : vertical ){

	display: grid;
	gap: $gap;

	@if $direction == horizontal {

    grid-auto-flow: column;

	}

}

@function rem($size) {
  @return calc($size / 16px) * 1rem;
}